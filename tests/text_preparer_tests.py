import unittest
from text_preparer import TextPreparer


class MyTestCase(unittest.TestCase):
    def setUp(self):
        self.tp = TextPreparer()

    def test_say_not_legal_move(self):
        res, res_tts = self.tp.say_not_legal_move('Nf3', 'Конь эф 3')
        self.assertEqual(res, '\nХод Nf3 невозможен. Попробуйте ещё раз.\n')
        self.assertEqual(res_tts,
                         '\nХод Конь эф 3 невозможен. Попробуйте ещё раз.\n')

    def test_say_your_move(self):
        res, res_tts = self.tp.say_your_move('Nf3', 'Конь эф 3')
        self.assertEqual(res, '\nХод Nf3 невозможен. Попробуйте ещё раз.\n')
        self.assertEqual(res_tts,
                         '\nХод Конь эф 3 невозможен. Попробуйте ещё раз.\n')

    def test_help(self):
        help_text_expected = """
Навык Шахматы вслепую. Ходим по очереди. 
 Ходы называем в формате: фигура + только координаты клетки, куда ходим.
 
 Имена фигур: Король, Ферзь, Ладья, Слон, Конь.
 Пешку можно не называть. 
 
 После фигуры называйте только координаты финальной клетки. 
 Фразу о взятии не произносим.
 Пример хода: "Слон d3"
 
 Отменять ходы нельзя.
 
 В качестве шахматного движка используется Stockfish.
 Уровень сложности пока что всегда 1. 
 Но скоро я научусь играть лучше и можно будет менять уровень сложности.,
 
 Навык Шахматы вслепую. Ходим по очереди. 
 Ходы называем в формате: фигура + только координаты клетки, куда ходим.
 
 Имена фигурsil <[70]>: Корольsil <[60]>, Ферзьsil <[60]>, Ладьяsil <[60]>, 
 Слонsil <[60]>, Конь.
 Пешку можно не называть. 
 
 После фигуры называйте только координаты финальной клетки. 
 Фразу о взятии не произносим.
 Пример хода: "Слон дэ 3"
 
 Отменять ходы нельзя.
 
 В качестве шахматного движка используется Stockfish.
 Уровень сложности пока что всегда 1. 
 Но скоро я научусь играть лучше и можно будет менять уровень сложности.
        """
        res = self.tp.say_help_text('Nf3', 'Конь эф 3')
        self.assertEqual(res, help_text_expected)


if __name__ == '__main__':
    unittest.main()
